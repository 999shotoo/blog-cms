generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String   @id @default(cuid())
  clerkUserId String   @unique
  firstName   String?
  lastName    String?
  email       String?
  phone       String?
  username    String?  @unique
  avatarUrl   String?
  client_ip   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  site        Site[]
}

model Site {
  id          String     @id @default(cuid())
  title       String
  description String?
  subdomain   String     @unique
  url         String
  imageUrl    String?
  createdAt   DateTime   @default(now())
  user        User       @relation(fields: [userId], references: [clerkUserId])
  userId      String
  article     Articles[]
  document    Document[]
  author      Author[]
  category    Category[]
}

model Document {
  id        String    @id @default(cuid())
  title     String
  content   String?
  createdAt DateTime  @default(now())
  article   Articles?
  siteId    String
  site      Site      @relation(fields: [siteId], references: [id])
}

model Category {
  id        String     @id @default(cuid())
  name      String
  createdAt DateTime   @default(now())
  article   Articles[]
  site       Site?     @relation(fields: [siteId], references: [id])
  siteId     String
}

model Author {
  id        String     @id @default(cuid())
  name      String
  email     String?
  bio       String?
  createdAt DateTime   @default(now())
  article   Articles[]
  site       Site?     @relation(fields: [siteId], references: [id])
  siteId     String
}

model Articles {
  id         String    @id @default(cuid())
  title      String
  subtitle   String?
  slug       String
  keywords   String[]
  createdAt  DateTime  @default(now())
  site       Site?     @relation(fields: [siteId], references: [id])
  siteId     String
  document   Document? @relation(fields: [documentId], references: [id])
  documentId String    @unique
  author     Author?   @relation(fields: [authorId], references: [id])
  authorId   String
  categoryId String
  category   Category  @relation(fields: [categoryId], references: [id])
}
